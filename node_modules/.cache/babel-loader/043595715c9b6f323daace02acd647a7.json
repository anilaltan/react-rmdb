{"ast":null,"code":"import _regeneratorRuntime from\"E:/Web-Dev/React learing/react-rmdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"E:/Web-Dev/React learing/react-rmdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"E:/Web-Dev/React learing/react-rmdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/Web-Dev/React learing/react-rmdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import API from'../API';// Helpers\nimport{isPersistedState}from'../helpers';export var useMovieFetch=function useMovieFetch(movieId){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var fetchMovie=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movie,credits,directors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);setError(false);_context.next=5;return API.fetchMovie(movieId);case 5:movie=_context.sent;_context.next=8;return API.fetchCredits(movieId);case 8:credits=_context.sent;// Get directors only\ndirectors=credits.crew.filter(function(member){return member.job==='Director';});setState(_objectSpread(_objectSpread({},movie),{},{actors:credits.cast,directors:directors}));setLoading(false);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);setError(true);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchMovie(){return _ref.apply(this,arguments);};}();var sessionState=isPersistedState(movieId);if(sessionState){setState(sessionState);setLoading(false);return;}fetchMovie();},[movieId]);// Write to sessionStorage\nuseEffect(function(){sessionStorage.setItem(movieId,JSON.stringify(state));},[movieId,state]);return{state:state,loading:loading,error:error};};","map":{"version":3,"sources":["E:/Web-Dev/React learing/react-rmdb/src/hooks/useMovieFetch.js"],"names":["useState","useEffect","API","isPersistedState","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchMovie","movie","fetchCredits","credits","directors","crew","filter","member","job","actors","cast","sessionState","sessionStorage","setItem","JSON","stringify"],"mappings":"omBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CACA;AACA,OAASC,gBAAT,KAAiC,YAAjC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,OAAO,CAAI,CACtC,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAA8BP,QAAQ,CAAC,IAAD,CAAtC,yCAAOQ,OAAP,eAAgBC,UAAhB,eACA,eAA0BT,QAAQ,CAAC,KAAD,CAAlC,yCAAOU,KAAP,eAAcC,QAAd,eAEAV,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,UAAU,0FAAG,+KAEfH,UAAU,CAAC,IAAD,CAAV,CACAE,QAAQ,CAAC,KAAD,CAAR,CAHe,sBAKKT,CAAAA,GAAG,CAACU,UAAJ,CAAeP,OAAf,CALL,QAKTQ,KALS,qCAMOX,CAAAA,GAAG,CAACY,YAAJ,CAAiBT,OAAjB,CANP,QAMTU,OANS,eAOf;AACMC,SARS,CAQGD,OAAO,CAACE,IAAR,CAAaC,MAAb,CAChB,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,GAAP,GAAe,UAAnB,EADU,CARH,CAYfb,QAAQ,gCACHM,KADG,MAENQ,MAAM,CAAEN,OAAO,CAACO,IAFV,CAGNN,SAAS,CAATA,SAHM,GAAR,CAMAP,UAAU,CAAC,KAAD,CAAV,CAlBe,iFAoBfE,QAAQ,CAAC,IAAD,CAAR,CApBe,qEAAH,kBAAVC,CAAAA,UAAU,0CAAhB,CAwBA,GAAMW,CAAAA,YAAY,CAAGpB,gBAAgB,CAACE,OAAD,CAArC,CAEA,GAAIkB,YAAJ,CAAkB,CAChBhB,QAAQ,CAACgB,YAAD,CAAR,CACAd,UAAU,CAAC,KAAD,CAAV,CACA,OACD,CAEDG,UAAU,GACX,CAlCQ,CAkCN,CAACP,OAAD,CAlCM,CAAT,CAoCA;AACAJ,SAAS,CAAC,UAAM,CACduB,cAAc,CAACC,OAAf,CAAuBpB,OAAvB,CAAgCqB,IAAI,CAACC,SAAL,CAAerB,KAAf,CAAhC,EACD,CAFQ,CAEN,CAACD,OAAD,CAAUC,KAAV,CAFM,CAAT,CAIA,MAAO,CAAEA,KAAK,CAALA,KAAF,CAASE,OAAO,CAAPA,OAAT,CAAkBE,KAAK,CAALA,KAAlB,CAAP,CACD,CA/CM","sourcesContent":["import { useState, useEffect } from 'react';\nimport API from '../API';\n// Helpers\nimport { isPersistedState } from '../helpers';\n\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get directors only\n        const directors = credits.crew.filter(\n          member => member.job === 'Director'\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors\n        });\n\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    const sessionState = isPersistedState(movieId);\n\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  // Write to sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return { state, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}